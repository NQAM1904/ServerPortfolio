[{"C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\components\\category\\CategoryComponent.js":"1","C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\components\\category\\CategoryItem.js":"2","C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\settings\\config.js":"3","C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\index.js":"4","C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\components\\menu\\MenuComponent.js":"5","C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\containers\\HomeContainer.js":"6","C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\containers\\routes.js":"7","C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\components\\home\\HomeComponent.js":"8","C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\containers\\ProjectContainer.js":"9","C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\components\\project\\ProjectComponent.js":"10","C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\components\\project\\ProjectItem.js":"11","C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\containers\\NotFoundContainer.js":"12","C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\containers\\CategoryContainer.js":"13"},{"size":5717,"mtime":1607747406922,"results":"14","hashOfConfig":"15"},{"size":738,"mtime":1607741477033,"results":"16","hashOfConfig":"15"},{"size":67,"mtime":1607445392975,"results":"17","hashOfConfig":"15"},{"size":312,"mtime":1607444657635,"results":"18","hashOfConfig":"15"},{"size":803,"mtime":1607748242143,"results":"19","hashOfConfig":"15"},{"size":285,"mtime":1607256426995,"results":"20","hashOfConfig":"15"},{"size":809,"mtime":1607748332776,"results":"21","hashOfConfig":"15"},{"size":233,"mtime":1607256356619,"results":"22","hashOfConfig":"15"},{"size":299,"mtime":1607748749643,"results":"23","hashOfConfig":"15"},{"size":8220,"mtime":1607846491808,"results":"24","hashOfConfig":"15"},{"size":915,"mtime":1607764641854,"results":"25","hashOfConfig":"15"},{"size":482,"mtime":1607255632524,"results":"26","hashOfConfig":"15"},{"size":304,"mtime":1607256434257,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"891uts",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\components\\category\\CategoryComponent.js",[],["59","60"],"C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\components\\category\\CategoryItem.js",[],"C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\settings\\config.js",[],"C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\index.js",[],"C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\components\\menu\\MenuComponent.js",[],"C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\containers\\HomeContainer.js",[],["61","62"],"C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\containers\\routes.js",[],"C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\components\\home\\HomeComponent.js",[],"C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\containers\\ProjectContainer.js",[],"C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\components\\project\\ProjectComponent.js",["63"],"import React, { Component } from 'react'\r\nimport { Button, Form, Modal, Table, Spinner } from 'react-bootstrap';\r\nimport API_URL from '../../settings/config';\r\nimport axios from 'axios';\r\nimport ProjectItem from './ProjectItem';\r\n\r\nclass ProjectComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projects: [],\r\n            id: '',\r\n            title: '',\r\n            txtName: '',\r\n            txtUrl: '',\r\n            txtGitHub: '',\r\n            image: '',\r\n            selectedCategory: null,\r\n            category: [],\r\n            showModal: false,\r\n            isLoading: false\r\n\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n        axios.get(`${API_URL}/projects`)\r\n            .then(res => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    projects: res.data,\r\n                });\r\n            })\r\n            .catch(err => console.log(err))\r\n\r\n        axios.get(`${API_URL}/category`)\r\n            .then(res => {\r\n                this.setState({\r\n                    category: res.data\r\n                });\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    onChange = (e) => {\r\n        var target = e.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    onDelete = (id) => {\r\n        const { projects } = this.state;\r\n        this.setState({ isLoading: true })\r\n        axios.delete(`${API_URL}/projects/${id}`)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    var index = this.findIndex(projects, id);\r\n                    if (index !== -1) {\r\n                        projects.splice(index, 1);\r\n                        this.setState({\r\n                            isLoading: false,\r\n                            projects: projects\r\n                        });\r\n\r\n                    }\r\n                    console.log(index)\r\n\r\n\r\n\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    findIndex = (projects, id) => {\r\n        var resutl = -1;\r\n        projects.forEach((project, index) => {\r\n            if (project.id === id) {\r\n                resutl = index;\r\n            }\r\n        })\r\n\r\n        return resutl;\r\n    }\r\n    showProject(projects) {\r\n        var result = null;\r\n        if (projects.length > 0) {\r\n            result = projects.map((item, index) => {\r\n                return (\r\n                    <ProjectItem\r\n                        key={index}\r\n                        index={index}\r\n                        _id={item._id}\r\n                        name={item.name}\r\n                        deployed_url={item.deployed_url}\r\n                        github_url={item.github_url}\r\n                        image={item.image}\r\n                        onDelete={this.onDelete}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n\r\n    onSave = (e) => {\r\n        e.preventDefault();\r\n        const { txtName, txtUrl, txtGitHub, image, category } = this.state;\r\n        var bodyFormData = new FormData();\r\n\r\n        bodyFormData.append('name', txtName);\r\n        bodyFormData.append('deployed_url', txtUrl);\r\n        bodyFormData.append('github_url', txtGitHub);\r\n        bodyFormData.append('image', image);\r\n        bodyFormData.append('category', category[0]._id);\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            body: bodyFormData,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        axios.post(`${API_URL}/projects/add`, bodyFormData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n            .then(result => console.log(result))\r\n            .catch(error => console.log('error', error));\r\n\r\n\r\n    }\r\n    render() {\r\n        const { projects, title, txtName, txtUrl, txtGitHub, showModal, isLoading } = this.state;\r\n        const showProject = isLoading === true ?\r\n            (<div className=\"text-center\">\r\n                <Spinner animation=\"grow\" variant=\"success\" >\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>\r\n            </div>)\r\n            : <Table striped bordered hover variant=\"dark\" responsive=\"lg\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Tên </th>\r\n                        <th>Hình ảnh</th>\r\n                        <th>Page-Url</th>\r\n                        <th>Github-URL</th>\r\n                        <th>Hành động</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.showProject(projects)}\r\n                </tbody>\r\n            </Table>\r\n        return (\r\n\r\n            <>\r\n                <h1>Projects</h1>\r\n                <div className=\"text-right\">\r\n                    <Button type=\"button\" className=\"btn btn-primary mb-10\" onClick={() => {\r\n                        this.setState({\r\n                            showModal: true,\r\n                            title: 'Thêm danh mục'\r\n                        })\r\n                    }}>Thêm Project</Button>\r\n                </div>\r\n\r\n\r\n                {showProject}\r\n\r\n                <Modal\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                    show={showModal} onHide={() => {\r\n                        this.setState({\r\n                            showModal: false,\r\n                        })\r\n                    }}>\r\n                    <Form onSubmit={this.onSave}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>{title.toString()}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <label>Tên</label>\r\n                            <input className=\"form-control\" type=\"text\" name=\"txtName\" value={txtName} onChange={this.onChange} />\r\n\r\n                            <label>Hình ảnh</label>\r\n                            <Form.File\r\n                                id=\"custom-file-translate-scss\"\r\n                                label=\"Hình ảnh\"\r\n                                lang=\"en\"\r\n                                custom\r\n                                type=\"file\" onChange={(e) => {\r\n                                    this.setState({\r\n                                        image: e.target.files[0]\r\n                                    });\r\n                                    console.log(e.target.files[0])\r\n                                }\r\n                                }\r\n                            />\r\n                            <label>URL</label>\r\n                            <input className=\"form-control\" type=\"text\" name=\"txtUrl\" value={txtUrl} onChange={this.onChange} />\r\n\r\n                            <label>GITHUB</label>\r\n                            <input className=\"form-control\" type=\"text\" name=\"txtGitHub\" value={txtGitHub} onChange={this.onChange} />\r\n\r\n                            <label>Danh Mục</label>\r\n                            <Form.Control size=\"as\" as=\"select\">\r\n                                {this.state.category.map((item, index) => {\r\n                                    return (\r\n                                        <option key={index}>{item.nameCategory}</option>\r\n                                    )\r\n                                })}\r\n                            </Form.Control>\r\n\r\n\r\n                        </Modal.Body>\r\n\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" type='button' onClick={() => { this.setState({ showModal: false }) }}>Đóng</Button>\r\n                            <Button type='submit'>Lưu</Button>\r\n                            {/* <input type='submit' /> */}\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default ProjectComponent;\r\n","C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\components\\project\\ProjectItem.js",["64"],"import React from 'react';\r\n\r\nconst ProjectItem = props => {\r\n    function onDelete(id) {\r\n        if (confirm(`Bạn có muốn xóa ${props._id} ? `)) { // eslint-disable-line\r\n            props.onDelete(id)\r\n        }\r\n    }\r\n\r\n    function onEdit(id) {\r\n        props.onEdit(id);\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td>{props.index + 1}</td>\r\n            <td>{props.name}</td>\r\n            <td><img src={'http://localhost:4000/' + props.image} width=\"100\" height=\"100\" /></td>\r\n            <td>{props.github_url}</td>\r\n            <td>{props.deployed_url}</td>\r\n            <td className=\"text-center\">\r\n                <button className=\"btn btn-warning mr-10 white\" onClick={() => onEdit(props._id)}>Sửa</button>\r\n                <button className=\"btn btn-danger\" onClick={() => onDelete(props._id)}>Xóa</button>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default ProjectItem;\r\n","C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\containers\\NotFoundContainer.js",[],"C:\\Users\\euste\\Desktop\\ServerPorject\\client\\admin\\src\\containers\\CategoryContainer.js",[],["65","66"],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"67","replacedBy":"71"},{"ruleId":"69","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":121,"column":13,"nodeType":"75","messageId":"76","endLine":121,"endColumn":27},{"ruleId":"77","severity":1,"message":"78","line":18,"column":17,"nodeType":"79","endLine":18,"endColumn":94},{"ruleId":"67","replacedBy":"80"},{"ruleId":"69","replacedBy":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],["82"],["83"],"no-unused-vars","'requestOptions' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["82"],["83"],"no-global-assign","no-unsafe-negation"]